name: TW Node.js CI

on:
    # Trigger the workflow on push or pull request, but only for the master branch
    push:
      branches:
        - master
    pull_request:
      branches:
        - master
    # Also trigger on page_build, as well as release created events
    page_build:
    release:
      types: # This configuration does not affect the page_build event above
        - created

jobs:
  build-lib:
    name: Install Lib dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache lib node modules
        uses: actions/cache@v1
        id: lib-node-modules-id
        env:
          cache-name: lib-node-modules
        with:
          path: ~/.npm
          key: lib-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/lib/package-lock.json') }}
          restore-keys: |
            lib-${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
  build:
    name: Build TW
    runs-on: ubuntu-latest
    needs: [build-lib]
    steps:
      - uses: actions/checkout@v2
      - name: Cache tw node modules
        uses: actions/cache@v1
        id: tw-node-modules-id
        env:
          cache-name: tw-node-modules
        with:
          path: ~/.npm
          key: tw-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/tw/package-lock.json') }}
          restore-keys: |
            tw-${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install lib dependencies
      # install deps in lib
        if: steps.lib-node-modules-id.outputs.cache-hit != 'true'
        run: |
          npm install
        working-directory: ./lib
      # install deps in tw
      - name: Install TW dependencies
        if: steps.tw-node-modules-id.outputs.cache-hit != 'true'
        run: npm install
        working-directory: ./tw
      # build tw
      - name: Build
        run: npm run build
        working-directory: ./tw
  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v2
    - name: TW Lint
      run: |
        npm install
        npm run lint
      working-directory: ./tw
  unit_test:
    needs: [build, lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        npm install
      working-directory: ./lib
    - run: |
        npm install
        npm run test:unit
        npm run build
        ls -la
        pwd
      working-directory: ./tw
    - name: Archive artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: ./tw/dist
    - name: Archive code coverage results
      uses: actions/upload-artifact@v1
      with:
        name: coverage
        path: tw/coverage