name: TW Node.js CI

on:
    # Trigger the workflow on push or pull request, but only for the master branch
    push:
      branches:
        - master
    pull_request:
      branches:
        - master
    # Also trigger on page_build, as well as release created events
    page_build:
    release:
      types: # This configuration does not affect the page_build event above
        - created

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # cache tw node modules
      - name: Cache tw node modules
        uses: actions/cache@v1
        id: tw-node-modules-cache
        env:
          cache-name: tw-node-modules-cache
        with:
          path: tw/node_modules
          key: tw-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('tw/package-lock.json') }}
          restore-keys: |
            tw-${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      # cache lib module
      - name: Cache lib node modules
        uses: actions/cache@v1
        id: lib-node-modules-cache
        env:
          cache-name: lib-node-modules-cache
        with:
          path: lib/node_modules
          key: lib-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('lib/package-lock.json') }}
          restore-keys: |
            lib-${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # install tw dependencies
      - name: Install tw dependencies
        if: steps.tw-node-modules-cache.outputs.cache-hit != 'true'
        run: npm install
        working-directory: tw
      
      # Install lib dependencies
      - name: Install lib dependencies
        if: steps.lib-node-modules-cache.outputs.cache-hit != 'true'
        run: npm install
        working-directory: lib
      
      # Lint
      - name: Lint
        run: npm run lint
        working-directory: ./tw

      # Build tw
      - name: Build
        run: npm run build
        working-directory: tw
      
      # Archive build dist artifacts
      - name: Archive build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: ./tw/dist
      
      # Unit test
      - name: Unit test
        run: npm run test:unit
        working-directory: ./tw     
      
      # Archive coverage
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: tw/coverage